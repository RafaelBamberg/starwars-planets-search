{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/sd-013-b-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext, useState } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction Table() {\n  const {\n    planets,\n    filter,\n    setFilter\n  } = useContext(StarWarsContext);\n  const [filterName, setFilterName] = useState('');\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [newOptions, setNewOptions] = useState(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  function removeFilter() {\n    setNewOptions(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n    setValue('0');\n    setComparison('maior que');\n    setColumn('orbital_period');\n  }\n\n  function createNewColumn(oldColumn) {\n    const newColumn = [...newOptions];\n    newColumn.splice(newColumn.indexOf(oldColumn), 1);\n    setNewOptions(newColumn);\n  }\n\n  function handleClick() {\n    setFilter({\n      filters: { ...filter.filters,\n        filterByNumericValues: [{\n          column,\n          comparison,\n          value\n        }]\n      }\n    });\n    createNewColumn(column);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"name-filter\",\n    onChange: event => setFilterName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    onChange: event => setColumn(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, newOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    onChange: event => setComparison(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    onChange: event => setValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: removeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \" X \")), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Orbital Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Url\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, planets.filter(planet => {\n    const values = filter.filters.filterByNumericValues[0];\n    let filteredResult = [];\n    console.log(values);\n\n    if (values.comparison === 'maior que') {\n      filteredResult = Number(planet[values.column]) > Number(values.value);\n    } else if (values.comparison === 'menor que') {\n      filteredResult = Number(planet[values.column]) < Number(values.value);\n    } else if (values.comparison === 'igual a') {\n      filteredResult = Number(planet[values.column]) === Number(values.value);\n    }\n\n    return filteredResult;\n  }).filter(planet => planet.name.toLowerCase().includes(filterName.toLowerCase())).map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, planet.url))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","useState","StarWarsContext","Table","planets","filter","setFilter","filterName","setFilterName","column","setColumn","comparison","setComparison","value","setValue","newOptions","setNewOptions","removeFilter","createNewColumn","oldColumn","newColumn","splice","indexOf","handleClick","filters","filterByNumericValues","event","target","map","option","planet","values","filteredResult","console","log","Number","name","toLowerCase","includes","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAiCN,UAAU,CAACE,eAAD,CAAjD;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,YAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,WAAD,CAA5C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAC3C,YAD2C,EAE3C,gBAF2C,EAG3C,UAH2C,EAI3C,iBAJ2C,EAK3C,eAL2C,CAAD,CAA5C;;AAQA,WAASgB,YAAT,GAAwB;AACtBD,IAAAA,aAAa,CAAC,CAAC,YAAD,EAAe,gBAAf,EACZ,UADY,EACA,iBADA,EACmB,eADnB,CAAD,CAAb;AAEAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,IAAAA,aAAa,CAAC,WAAD,CAAb;AACAF,IAAAA,SAAS,CAAC,gBAAD,CAAT;AACD;;AAED,WAASQ,eAAT,CAAyBC,SAAzB,EAAoC;AAClC,UAAMC,SAAS,GAAG,CAAC,GAAGL,UAAJ,CAAlB;AACAK,IAAAA,SAAS,CAACC,MAAV,CAAiBD,SAAS,CAACE,OAAV,CAAkBH,SAAlB,CAAjB,EAA+C,CAA/C;AACAH,IAAAA,aAAa,CAACI,SAAD,CAAb;AACD;;AAED,WAASG,WAAT,GAAuB;AACrBjB,IAAAA,SAAS,CAAC;AACRkB,MAAAA,OAAO,EAAE,EACP,GAAGnB,MAAM,CAACmB,OADH;AAEPC,QAAAA,qBAAqB,EAAE,CACrB;AACEhB,UAAAA,MADF;AAEEE,UAAAA,UAFF;AAGEE,UAAAA;AAHF,SADqB;AAFhB;AADD,KAAD,CAAT;AAYAK,IAAAA,eAAe,CAACT,MAAD,CAAf;AACD;;AAED,sBACE,uDACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,mBAAY,aAFd;AAGE,IAAA,QAAQ,EAAIiB,KAAD,IAAWlB,aAAa,CAACkB,KAAK,CAACC,MAAN,CAAad,KAAd,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AACE,mBAAY,eADd;AAEE,IAAA,QAAQ,EAAIa,KAAD,IAAWhB,SAAS,CAACgB,KAAK,CAACC,MAAN,CAAad,KAAd,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIE,UAAU,CAACa,GAAX,CAAgBC,MAAD,iBACf;AAAQ,IAAA,GAAG,EAAGA,MAAd;AAAuB,IAAA,KAAK,EAAGA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,MAA1C,CADA,CAJJ,CANF,eAcE;AACE,mBAAY,mBADd;AAEE,IAAA,QAAQ,EAAIH,KAAD,IAAWd,aAAa,CAACc,KAAK,CAACC,MAAN,CAAad,KAAd,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CAdF,eAsBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,cAFd;AAGE,IAAA,QAAQ,EAAIa,KAAD,IAAWZ,QAAQ,CAACY,KAAK,CAACC,MAAN,CAAad,KAAd,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eA2BE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,eAFd;AAGE,IAAA,OAAO,EAAGU,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3BF,eAkCE;AAAK,mBAAY,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAGN,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAlCF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbF,CADF,CADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIb,OAAO,CACNC,MADD,CACSyB,MAAD,IAAY;AAClB,UAAMC,MAAM,GAAG1B,MAAM,CAACmB,OAAP,CAAeC,qBAAf,CAAqC,CAArC,CAAf;AACA,QAAIO,cAAc,GAAG,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,QAAIA,MAAM,CAACpB,UAAP,KAAsB,WAA1B,EAAuC;AACrCqB,MAAAA,cAAc,GAAGG,MAAM,CAACL,MAAM,CAACC,MAAM,CAACtB,MAAR,CAAP,CAAN,GAAgC0B,MAAM,CAACJ,MAAM,CAAClB,KAAR,CAAvD;AACD,KAFD,MAEO,IAAIkB,MAAM,CAACpB,UAAP,KAAsB,WAA1B,EAAuC;AAC5CqB,MAAAA,cAAc,GAAGG,MAAM,CAACL,MAAM,CAACC,MAAM,CAACtB,MAAR,CAAP,CAAN,GAAgC0B,MAAM,CAACJ,MAAM,CAAClB,KAAR,CAAvD;AACD,KAFM,MAEA,IAAIkB,MAAM,CAACpB,UAAP,KAAsB,SAA1B,EAAqC;AAC1CqB,MAAAA,cAAc,GAAGG,MAAM,CAACL,MAAM,CAACC,MAAM,CAACtB,MAAR,CAAP,CAAN,KAAkC0B,MAAM,CAACJ,MAAM,CAAClB,KAAR,CAAzD;AACD;;AAAC,WAAOmB,cAAP;AACH,GAZD,EAaC3B,MAbD,CAaSyB,MAAD,IAAYA,MAAM,CAACM,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAClB/B,UAAU,CAAC8B,WAAX,EADkB,CAbpB,EAgBCT,GAhBD,CAgBME,MAAD,iBACH;AAAI,IAAA,GAAG,EAAGA,MAAM,CAACM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCN,MAAM,CAACM,IAAvC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMN,MAAM,CAACS,eAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMT,MAAM,CAACU,cAAb,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,MAAM,CAACW,QAAb,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,MAAM,CAACY,OAAb,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMZ,MAAM,CAACa,OAAb,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,MAAM,CAACc,OAAb,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMd,MAAM,CAACe,aAAb,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMf,MAAM,CAACgB,UAAb,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMhB,MAAM,CAACiB,KAAb,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMjB,MAAM,CAACkB,OAAb,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMlB,MAAM,CAACmB,MAAb,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMnB,MAAM,CAACoB,GAAb,CAbF,CAjBF,CADJ,CAlBF,CArCF,CADF;AA8FD;;AAED,eAAe/C,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction Table() {\n  const { planets, filter, setFilter } = useContext(StarWarsContext);\n  const [filterName, setFilterName] = useState('');\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [newOptions, setNewOptions] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n\n  function removeFilter() {\n    setNewOptions(['population', 'orbital_period',\n      'diameter', 'rotation_period', 'surface_water']);\n    setValue('0');\n    setComparison('maior que');\n    setColumn('orbital_period');\n  }\n\n  function createNewColumn(oldColumn) {\n    const newColumn = [...newOptions];\n    newColumn.splice(newColumn.indexOf(oldColumn), 1);\n    setNewOptions(newColumn);\n  }\n\n  function handleClick() {\n    setFilter({\n      filters: {\n        ...filter.filters,\n        filterByNumericValues: [\n          {\n            column,\n            comparison,\n            value,\n          },\n        ],\n      },\n    });\n    createNewColumn(column);\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        onChange={ (event) => setFilterName(event.target.value) }\n      />\n      <select\n        data-testid=\"column-filter\"\n        onChange={ (event) => setColumn(event.target.value) }\n      >\n        { newOptions.map((option) => (\n          <option key={ option } value={ option }>{ option }</option>\n        )) }\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        onChange={ (event) => setComparison(event.target.value) }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        data-testid=\"value-filter\"\n        onChange={ (event) => setValue(event.target.value) }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ handleClick }\n      >\n        Filtrar\n      </button>\n      <div data-testid=\"filter\">\n        <button type=\"button\" onClick={ removeFilter }> X </button>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Rotation Period</th>\n            <th>Orbital Period</th>\n            <th>Diameter</th>\n            <th>Climate</th>\n            <th>Gravity</th>\n            <th>Terrain</th>\n            <th>Surface Water</th>\n            <th>Population</th>\n            <th>Films</th>\n            <th>Created</th>\n            <th>Edited</th>\n            <th>Url</th>\n          </tr>\n        </thead>\n        <tbody>\n          { planets\n            .filter((planet) => {\n              const values = filter.filters.filterByNumericValues[0];\n              let filteredResult = [];\n              console.log(values);\n              if (values.comparison === 'maior que') {\n                filteredResult = Number(planet[values.column]) > Number(values.value);\n              } else if (values.comparison === 'menor que') {\n                filteredResult = Number(planet[values.column]) < Number(values.value);\n              } else if (values.comparison === 'igual a') {\n                filteredResult = Number(planet[values.column]) === Number(values.value);\n              } return filteredResult;\n            })\n            .filter((planet) => planet.name.toLowerCase().includes(\n              filterName.toLowerCase(),\n            ))\n            .map((planet) => (\n              <tr key={ planet.name }>\n                <td data-testid=\"planet-name\">{ planet.name }</td>\n                <td>{ planet.rotation_period }</td>\n                <td>{ planet.orbital_period }</td>\n                <td>{ planet.diameter }</td>\n                <td>{ planet.climate }</td>\n                <td>{ planet.gravity }</td>\n                <td>{ planet.terrain }</td>\n                <td>{ planet.surface_water }</td>\n                <td>{ planet.population }</td>\n                <td>{ planet.films }</td>\n                <td>{ planet.created }</td>\n                <td>{ planet.edited }</td>\n                <td>{ planet.url }</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/sd-013-b-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext, useState } from 'react';\nimport StarWarsContext from '../context/StarWarsContext'; // feito olhando com o base o repositorio: https://github.com/tryber/sd-013-b-revisao-music-table/blob/master/src/components/Table.jsx\n\nfunction Table() {\n  const {\n    planets,\n    filter,\n    setFilter,\n    setSortAscOrDesc,\n    sortColumn,\n    sortAscOrDesc\n  } = useContext(StarWarsContext);\n  const [filterName, setFilterName] = useState('');\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [newOptions, setNewOptions] = useState(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n\n  function removeFilter() {\n    setNewOptions(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n    setValue('0');\n    setComparison('maior que');\n    setColumn('orbital_period');\n  }\n\n  const descending = -1;\n\n  function sortFilter(people, type) {\n    const sortType = type === 'ASC' ? 1 : descending;\n    const sortedColumn = [...planets].sort((planetA, planetB) => Number(planetA[people]) > Number(planetB[people]) ? sortType : -sortType);\n    planets(sortedColumn);\n  }\n\n  function createNewColumn(oldColumn) {\n    const newColumn = [...newOptions];\n    newColumn.splice(newColumn.indexOf(oldColumn), 1);\n    setNewOptions(newColumn);\n  }\n\n  function handleClick() {\n    setFilter({\n      filters: { ...filter.filters,\n        filterByNumericValues: [{\n          column,\n          comparison,\n          value\n        }]\n      }\n    });\n    createNewColumn(column);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"name-filter\",\n    onChange: event => setFilterName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    onChange: event => setColumn(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, newOptions.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    onChange: event => setComparison(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"igual a\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    onChange: event => setValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Filtrar\"), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"asc-radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"ASC\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-asc\",\n    name: \"sort-radios\",\n    id: \"asc-radio\",\n    type: \"radio\",\n    value: \"ASC\",\n    onClick: () => setSortAscOrDesc('ASC'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc-radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"DESC\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-desc\",\n    name: \"sort-radios\",\n    id: \"desc-radio\",\n    type: \"radio\",\n    value: \"DESC\",\n    onClick: () => setSortAscOrDesc('DESC'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => sortFilter(sortColumn, sortAscOrDesc),\n    \"data-testid\": \"column-sort-button\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Filtrar\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: removeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \" X \")), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Orbital Period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Surface Water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Url\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, planets.filter(planet => {\n    const values = filter.filters.filterByNumericValues[0];\n    let filteredResult = []; // Feito com a ajuda da Paulinha na monitoria individual\n\n    if (value > 0) {\n      if (values.comparison === 'maior que') {\n        filteredResult = Number(planet[values.column]) > Number(values.value);\n      } else if (values.comparison === 'menor que') {\n        filteredResult = Number(planet[values.column]) < Number(values.value);\n      } else if (values.comparison === 'igual a') {\n        filteredResult = Number(planet[values.column]) === Number(values.value);\n      }\n\n      return filteredResult;\n    }\n\n    return planets;\n  }).filter(planet => planet.name.toLowerCase().includes(filterName.toLowerCase())).map(planet => /*#__PURE__*/React.createElement(\"tr\", {\n    key: planet.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, planet.url))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","useState","StarWarsContext","Table","planets","filter","setFilter","setSortAscOrDesc","sortColumn","sortAscOrDesc","filterName","setFilterName","column","setColumn","comparison","setComparison","value","setValue","newOptions","setNewOptions","removeFilter","descending","sortFilter","people","type","sortType","sortedColumn","sort","planetA","planetB","Number","createNewColumn","oldColumn","newColumn","splice","indexOf","handleClick","filters","filterByNumericValues","event","target","map","option","planet","values","filteredResult","name","toLowerCase","includes","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,4BAA5B,C,CAEA;;AACA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,OAAF;AACJC,IAAAA,MADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA;AALI,MAKcT,UAAU,CAACE,eAAD,CAL9B;AAMA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,YAAD,CAApC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,WAAD,CAA5C;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,CAC3C,YAD2C,EAE3C,gBAF2C,EAG3C,UAH2C,EAI3C,iBAJ2C,EAK3C,eAL2C,CAAD,CAA5C;;AAQA,WAASmB,YAAT,GAAwB;AACtBD,IAAAA,aAAa,CAAC,CAAC,YAAD,EAAe,gBAAf,EACZ,UADY,EACA,iBADA,EACmB,eADnB,CAAD,CAAb;AAEAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACAF,IAAAA,aAAa,CAAC,WAAD,CAAb;AACAF,IAAAA,SAAS,CAAC,gBAAD,CAAT;AACD;;AAED,QAAMQ,UAAU,GAAG,CAAC,CAApB;;AAEA,WAASC,UAAT,CAAoBC,MAApB,EAA4BC,IAA5B,EAAkC;AAChC,UAAMC,QAAQ,GAAGD,IAAI,KAAK,KAAT,GAAiB,CAAjB,GAAqBH,UAAtC;AACA,UAAMK,YAAY,GAAG,CAAC,GAAGtB,OAAJ,EAClBuB,IADkB,CACb,CAACC,OAAD,EAAUC,OAAV,KAAwBC,MAAM,CAACF,OAAO,CAACL,MAAD,CAAR,CAAN,GAA0BO,MAAM,CAACD,OAAO,CAACN,MAAD,CAAR,CAAhC,GAC1BE,QAD0B,GAE1B,CAACA,QAHc,CAArB;AAIArB,IAAAA,OAAO,CAACsB,YAAD,CAAP;AACD;;AAED,WAASK,eAAT,CAAyBC,SAAzB,EAAoC;AAClC,UAAMC,SAAS,GAAG,CAAC,GAAGf,UAAJ,CAAlB;AACAe,IAAAA,SAAS,CAACC,MAAV,CAAiBD,SAAS,CAACE,OAAV,CAAkBH,SAAlB,CAAjB,EAA+C,CAA/C;AACAb,IAAAA,aAAa,CAACc,SAAD,CAAb;AACD;;AAED,WAASG,WAAT,GAAuB;AACrB9B,IAAAA,SAAS,CAAC;AACR+B,MAAAA,OAAO,EAAE,EACP,GAAGhC,MAAM,CAACgC,OADH;AAEPC,QAAAA,qBAAqB,EAAE,CACrB;AACE1B,UAAAA,MADF;AAEEE,UAAAA,UAFF;AAGEE,UAAAA;AAHF,SADqB;AAFhB;AADD,KAAD,CAAT;AAYAe,IAAAA,eAAe,CAACnB,MAAD,CAAf;AACD;;AAED,sBACE,uDACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,mBAAY,aAFd;AAGE,IAAA,QAAQ,EAAI2B,KAAD,IAAW5B,aAAa,CAAC4B,KAAK,CAACC,MAAN,CAAaxB,KAAd,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AACE,mBAAY,eADd;AAEE,IAAA,QAAQ,EAAIuB,KAAD,IAAW1B,SAAS,CAAC0B,KAAK,CAACC,MAAN,CAAaxB,KAAd,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIE,UAAU,CAACuB,GAAX,CAAgBC,MAAD,iBACf;AAAQ,IAAA,GAAG,EAAGA,MAAd;AAAuB,IAAA,KAAK,EAAGA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,MAA1C,CADA,CAJJ,CANF,eAcE;AACE,mBAAY,mBADd;AAEE,IAAA,QAAQ,EAAIH,KAAD,IAAWxB,aAAa,CAACwB,KAAK,CAACC,MAAN,CAAaxB,KAAd,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CAdF,eAsBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,cAFd;AAGE,IAAA,QAAQ,EAAIuB,KAAD,IAAWtB,QAAQ,CAACsB,KAAK,CAACC,MAAN,CAAaxB,KAAd,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eA2BE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,eAFd;AAGE,IAAA,OAAO,EAAGoB,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3BF,eAkCE;AAAK,mBAAY,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AACE,mBAAY,uBADd;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,EAAE,EAAC,WAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,KALR;AAME,IAAA,OAAO,EAAG,MAAM7B,gBAAgB,CAAC,KAAD,CANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eAaE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AACE,mBAAY,wBADd;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,MALR;AAME,IAAA,OAAO,EAAG,MAAMA,gBAAgB,CAAC,MAAD,CANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,eAwBE;AACE,IAAA,OAAO,EAAG,MAAMe,UAAU,CAACd,UAAD,EAAaC,aAAb,CAD5B;AAEE,mBAAY,oBAFd;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAxBF,eA+BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAGW,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA/BF,CAlCF,eAmEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbF,CADF,CADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIhB,OAAO,CACNC,MADD,CACSsC,MAAD,IAAY;AAClB,UAAMC,MAAM,GAAGvC,MAAM,CAACgC,OAAP,CAAeC,qBAAf,CAAqC,CAArC,CAAf;AACA,QAAIO,cAAc,GAAG,EAArB,CAFkB,CAGlB;;AACA,QAAI7B,KAAK,GAAG,CAAZ,EAAe;AACb,UAAI4B,MAAM,CAAC9B,UAAP,KAAsB,WAA1B,EAAuC;AACrC+B,QAAAA,cAAc,GAAGf,MAAM,CAACa,MAAM,CAACC,MAAM,CAAChC,MAAR,CAAP,CAAN,GAAgCkB,MAAM,CAACc,MAAM,CAAC5B,KAAR,CAAvD;AACD,OAFD,MAEO,IAAI4B,MAAM,CAAC9B,UAAP,KAAsB,WAA1B,EAAuC;AAC5C+B,QAAAA,cAAc,GAAGf,MAAM,CAACa,MAAM,CAACC,MAAM,CAAChC,MAAR,CAAP,CAAN,GAAgCkB,MAAM,CAACc,MAAM,CAAC5B,KAAR,CAAvD;AACD,OAFM,MAEA,IAAI4B,MAAM,CAAC9B,UAAP,KAAsB,SAA1B,EAAqC;AAC1C+B,QAAAA,cAAc,GAAGf,MAAM,CAACa,MAAM,CAACC,MAAM,CAAChC,MAAR,CAAP,CAAN,KAAkCkB,MAAM,CAACc,MAAM,CAAC5B,KAAR,CAAzD;AACD;;AAAC,aAAO6B,cAAP;AACH;;AACD,WAAOzC,OAAP;AACD,GAfD,EAgBCC,MAhBD,CAgBSsC,MAAD,IAAYA,MAAM,CAACG,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAClBtC,UAAU,CAACqC,WAAX,EADkB,CAhBpB,EAmBCN,GAnBD,CAmBME,MAAD,iBACH;AAAI,IAAA,GAAG,EAAGA,MAAM,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCH,MAAM,CAACG,IAAvC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,MAAM,CAACM,eAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMN,MAAM,CAACO,cAAb,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,MAAM,CAACQ,QAAb,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,MAAM,CAACS,OAAb,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMT,MAAM,CAACU,OAAb,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,MAAM,CAACW,OAAb,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,MAAM,CAACY,aAAb,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMZ,MAAM,CAACa,UAAb,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,MAAM,CAACc,KAAb,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMd,MAAM,CAACe,OAAb,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMf,MAAM,CAACgB,MAAb,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMhB,MAAM,CAACiB,GAAb,CAbF,CApBF,CADJ,CAlBF,CAnEF,CADF;AA+HD;;AAED,eAAezD,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\n// feito olhando com o base o repositorio: https://github.com/tryber/sd-013-b-revisao-music-table/blob/master/src/components/Table.jsx\nfunction Table() {\n  const { planets,\n    filter,\n    setFilter,\n    setSortAscOrDesc,\n    sortColumn,\n    sortAscOrDesc } = useContext(StarWarsContext);\n  const [filterName, setFilterName] = useState('');\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [newOptions, setNewOptions] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n\n  function removeFilter() {\n    setNewOptions(['population', 'orbital_period',\n      'diameter', 'rotation_period', 'surface_water']);\n    setValue('0');\n    setComparison('maior que');\n    setColumn('orbital_period');\n  }\n\n  const descending = -1;\n\n  function sortFilter(people, type) {\n    const sortType = type === 'ASC' ? 1 : descending;\n    const sortedColumn = [...planets]\n      .sort((planetA, planetB) => ((Number(planetA[people]) > Number(planetB[people])\n        ? sortType\n        : -sortType)));\n    planets(sortedColumn);\n  }\n\n  function createNewColumn(oldColumn) {\n    const newColumn = [...newOptions];\n    newColumn.splice(newColumn.indexOf(oldColumn), 1);\n    setNewOptions(newColumn);\n  }\n\n  function handleClick() {\n    setFilter({\n      filters: {\n        ...filter.filters,\n        filterByNumericValues: [\n          {\n            column,\n            comparison,\n            value,\n          },\n        ],\n      },\n    });\n    createNewColumn(column);\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        onChange={ (event) => setFilterName(event.target.value) }\n      />\n      <select\n        data-testid=\"column-filter\"\n        onChange={ (event) => setColumn(event.target.value) }\n      >\n        { newOptions.map((option) => (\n          <option key={ option } value={ option }>{ option }</option>\n        )) }\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        onChange={ (event) => setComparison(event.target.value) }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        data-testid=\"value-filter\"\n        onChange={ (event) => setValue(event.target.value) }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ handleClick }\n      >\n        Filtrar\n      </button>\n      <div data-testid=\"filter\">\n\n        <label htmlFor=\"asc-radio\">\n          ASC\n          <input\n            data-testid=\"column-sort-input-asc\"\n            name=\"sort-radios\"\n            id=\"asc-radio\"\n            type=\"radio\"\n            value=\"ASC\"\n            onClick={ () => setSortAscOrDesc('ASC') }\n          />\n        </label>\n        <label htmlFor=\"desc-radio\">\n          DESC\n          <input\n            data-testid=\"column-sort-input-desc\"\n            name=\"sort-radios\"\n            id=\"desc-radio\"\n            type=\"radio\"\n            value=\"DESC\"\n            onClick={ () => setSortAscOrDesc('DESC') }\n          />\n        </label>\n        <button\n          onClick={ () => sortFilter(sortColumn, sortAscOrDesc) }\n          data-testid=\"column-sort-button\"\n          type=\"button\"\n        >\n          Filtrar\n        </button>\n        <button type=\"button\" onClick={ removeFilter }> X </button>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Rotation Period</th>\n            <th>Orbital Period</th>\n            <th>Diameter</th>\n            <th>Climate</th>\n            <th>Gravity</th>\n            <th>Terrain</th>\n            <th>Surface Water</th>\n            <th>Population</th>\n            <th>Films</th>\n            <th>Created</th>\n            <th>Edited</th>\n            <th>Url</th>\n          </tr>\n        </thead>\n        <tbody>\n          { planets\n            .filter((planet) => {\n              const values = filter.filters.filterByNumericValues[0];\n              let filteredResult = [];\n              // Feito com a ajuda da Paulinha na monitoria individual\n              if (value > 0) {\n                if (values.comparison === 'maior que') {\n                  filteredResult = Number(planet[values.column]) > Number(values.value);\n                } else if (values.comparison === 'menor que') {\n                  filteredResult = Number(planet[values.column]) < Number(values.value);\n                } else if (values.comparison === 'igual a') {\n                  filteredResult = Number(planet[values.column]) === Number(values.value);\n                } return filteredResult;\n              }\n              return planets;\n            })\n            .filter((planet) => planet.name.toLowerCase().includes(\n              filterName.toLowerCase(),\n            ))\n            .map((planet) => (\n              <tr key={ planet.name }>\n                <td data-testid=\"planet-name\">{ planet.name }</td>\n                <td>{ planet.rotation_period }</td>\n                <td>{ planet.orbital_period }</td>\n                <td>{ planet.diameter }</td>\n                <td>{ planet.climate }</td>\n                <td>{ planet.gravity }</td>\n                <td>{ planet.terrain }</td>\n                <td>{ planet.surface_water }</td>\n                <td>{ planet.population }</td>\n                <td>{ planet.films }</td>\n                <td>{ planet.created }</td>\n                <td>{ planet.edited }</td>\n                <td>{ planet.url }</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}
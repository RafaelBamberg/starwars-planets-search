{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/sd-013-b-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction Table() {\n  const {\n    planets\n  } = useContext(StarWarsContext);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filterByName, setFilterByName] = useState('');\n  const [arrayNumericFilters, setArrayNumericFilters] = useState([]);\n  const [newFilter, setNewfilter] = useState({\n    column: '',\n    comparison: '',\n    value: ''\n  });\n  const columns = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  const [filteredColumns, setFilteredColumns] = useState([...columns]);\n  useEffect(() => {\n    setFilteredData(planets);\n  }, [planets]);\n  useEffect(() => {}, [filteredColumns]);\n\n  function removeFilter() {\n    setFilteredColumns(['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n    arrayNumericFilters('0');\n    setArrayNumericFilters('maior que');\n    filteredData('orbital_period');\n  }\n\n  const applyNumberFilter = planet => {\n    switch (newFilter.comparison) {\n      case 'maior que':\n        return Number(planet[newFilter.column]) > Number(newFilter.value);\n\n      case 'menor que':\n        return Number(planet[newFilter.column]) < Number(newFilter.value);\n\n      case 'igual a':\n        return Number(planet[newFilter.column]) === Number(newFilter.value);\n\n      default:\n        return false;\n    }\n  };\n\n  const handleAddFilter = () => {\n    const contem = arrayNumericFilters.find(filter => filter.column === newFilter.column);\n\n    if (!contem) {\n      setArrayNumericFilters([...arrayNumericFilters, newFilter]);\n      const newData = filteredData.filter(planet => applyNumberFilter(planet));\n      setFilteredData(newData);\n      console.log(newFilter);\n      const newColumns = filteredColumns.filter(filter => filter !== newFilter.column);\n      setFilteredColumns(newColumns);\n      console.log(newColumns);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filterName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Planet name:\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-filter\",\n    type: \"text\",\n    name: \"filterName\",\n    value: filterByName,\n    onChange: event => {\n      const {\n        target: {\n          value\n        }\n      } = event;\n      setFilterByName(value);\n      const newData = planets.filter(planet => planet.name.includes(value));\n      setFilteredData(newData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"column-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"column-filter\",\n    \"data-testid\": \"column-filter\",\n    value: newFilter.column,\n    onChange: event => setNewfilter({ ...newFilter,\n      column: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, filteredColumns.map(column => /*#__PURE__*/React.createElement(\"option\", {\n    key: column,\n    value: column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, column)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"comparison-filter\",\n    \"data-testid\": \"comparison-filter\",\n    value: newFilter.comparison,\n    onChange: event => setNewfilter({ ...newFilter,\n      comparison: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"igual a\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"value-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"value-filter\",\n    \"data-testid\": \"value-filter\",\n    value: newFilter.value,\n    onChange: event => setNewfilter({ ...newFilter,\n      value: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: handleAddFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Adicionar\"), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: removeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \" X \"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Rotation_period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Orbital_period\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Surface_water\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Url\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, planets === undefined ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Loading...\") : filteredData.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, planet.url))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","useState","useEffect","StarWarsContext","Table","planets","filteredData","setFilteredData","filterByName","setFilterByName","arrayNumericFilters","setArrayNumericFilters","newFilter","setNewfilter","column","comparison","value","columns","filteredColumns","setFilteredColumns","removeFilter","applyNumberFilter","planet","Number","handleAddFilter","contem","find","filter","newData","console","log","newColumns","event","target","name","includes","map","undefined","index","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport StarWarsContext from '../context/StarWarsContext';\n\nfunction Table() {\n  const { planets } = useContext(StarWarsContext);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filterByName, setFilterByName] = useState('');\n  const [arrayNumericFilters, setArrayNumericFilters] = useState([]);\n  const [newFilter, setNewfilter] = useState({\n    column: '',\n    comparison: '',\n    value: '',\n  });\n\n  const columns = ['population',\n    'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n  const [filteredColumns, setFilteredColumns] = useState([...columns]);\n\n  useEffect(() => {\n    setFilteredData(planets);\n  }, [planets]);\n\n  useEffect(() => {\n  }, [filteredColumns]);\n\n  function removeFilter() {\n    setFilteredColumns(['population', 'orbital_period',\n      'diameter', 'rotation_period', 'surface_water']);\n    arrayNumericFilters('0');\n    setArrayNumericFilters('maior que');\n    filteredData('orbital_period');\n  }\n\n  const applyNumberFilter = (planet) => {\n    switch (newFilter.comparison) {\n    case 'maior que':\n      return (Number(planet[newFilter.column]) > Number(newFilter.value));\n    case 'menor que':\n      return (Number(planet[newFilter.column]) < Number(newFilter.value));\n    case 'igual a':\n      return (Number(planet[newFilter.column]) === Number(newFilter.value));\n    default:\n      return false;\n    }\n  };\n\n  const handleAddFilter = () => {\n    const contem = arrayNumericFilters.find(\n      (filter) => filter.column === newFilter.column,\n    );\n    if (!contem) {\n      setArrayNumericFilters([...arrayNumericFilters, newFilter]);\n      const newData = filteredData.filter((planet) => applyNumberFilter(planet));\n      setFilteredData(newData);\n      console.log(newFilter);\n      const newColumns = filteredColumns.filter((filter) => filter !== newFilter.column);\n      setFilteredColumns(newColumns);\n      console.log(newColumns);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"filterName\">\n          Planet name:\n          <input\n            data-testid=\"name-filter\"\n            type=\"text\"\n            name=\"filterName\"\n            value={ filterByName }\n            onChange={ (event) => {\n              const { target: { value } } = event;\n              setFilterByName(value);\n              const newData = planets.filter((planet) => planet.name.includes(value));\n              setFilteredData(newData);\n            } }\n          />\n        </label>\n      </div>\n      <br />\n      <div>\n        <label htmlFor=\"column-filter\">\n          <select\n            name=\"column-filter\"\n            data-testid=\"column-filter\"\n            value={ newFilter.column }\n            onChange={ (event) => setNewfilter({\n              ...newFilter,\n              column: event.target.value,\n            }) }\n          >\n            { filteredColumns.map((column) => (\n              <option key={ column } value={ column }>{column}</option>\n            )) }\n          </select>\n        </label>\n        <label htmlFor=\"comparison-filter\">\n          <select\n            name=\"comparison-filter\"\n            data-testid=\"comparison-filter\"\n            value={ newFilter.comparison }\n            onChange={ (event) => setNewfilter({\n              ...newFilter,\n              comparison: event.target.value,\n            }) }\n          >\n            <option value=\"\"> </option>\n            <option value=\"maior que\">maior que</option>\n            <option value=\"menor que\">menor que</option>\n            <option value=\"igual a\">igual a</option>\n          </select>\n        </label>\n        <label htmlFor=\"value-filter\">\n          <input\n            type=\"number\"\n            name=\"value-filter\"\n            data-testid=\"value-filter\"\n            value={ newFilter.value }\n            onChange={ (event) => setNewfilter({\n              ...newFilter,\n              value: event.target.value,\n            }) }\n          />\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ handleAddFilter }\n        >\n          Adicionar\n        </button>\n        <div data-testid=\"filter\">\n          <button type=\"button\" onClick={ removeFilter }> X </button>\n        </div>\n      </div>\n      <br />\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Rotation_period</th>\n            <th>Orbital_period</th>\n            <th>Diameter</th>\n            <th>Climate</th>\n            <th>Gravity</th>\n            <th>Terrain</th>\n            <th>Surface_water</th>\n            <th>Population</th>\n            <th>Films</th>\n            <th>Created</th>\n            <th>Edited</th>\n            <th>Url</th>\n          </tr>\n        </thead>\n        <tbody>\n          {planets === undefined\n            ? <tr>Loading...</tr>\n            : filteredData\n              .map((planet, index) => (\n                <tr key={ index }>\n                  <td data-testid=\"planet-name\">{planet.name}</td>\n                  <td>{planet.rotation_period}</td>\n                  <td>{planet.orbital_period}</td>\n                  <td>{planet.diameter}</td>\n                  <td>{planet.climate}</td>\n                  <td>{planet.gravity}</td>\n                  <td>{planet.terrain}</td>\n                  <td>{planet.surface_water}</td>\n                  <td>{planet.population}</td>\n                  <td>{planet.films}</td>\n                  <td>{planet.created}</td>\n                  <td>{planet.edited}</td>\n                  <td>{planet.url}</td>\n                </tr>))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}